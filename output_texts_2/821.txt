Sophos Home protects every Mac and PC in your home 
This month‚Äôs Patch Tuesday fixes just came out in what we‚Äôre calling a ‚Äúbumper update‚Äú.
Microsoft pushed out fixes for 111 different CVE-tagged vulnerabilities, 16 of which are deemed critical.
That includes bugs that could in theory be remotely exploited, for example via rogue attachments or booby-trapped web pages, to implant malware without popping up any dialogs or warnings.
However, there‚Äôs one apparently minor vulnerability that you may have seen in the media, because it‚Äôs created quite a stir: CVE-2020-1048.
Here‚Äôs how Microsoft describes it:

Windows Print Spooler Elevation of Privilege Vulnerability
An elevation of privilege vulnerability exists when the Windows Print Spooler service improperly allows arbitrary writing to the file system. An attacker who successfully exploited this vulnerability could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted script or application.

Security researchers Alex Ionescu and Yarden Shafir of technical seminar company Winsider have just published a very lengthy blog post in which they present this bug with the catchy name of PrintDemon.
For those not familiar with Unix, that‚Äôs a pun on the word daemon, pronounced ‚Äúdemon‚Äù and essentially the same word in a more Greek-like spelling, which is the Linux and Unix equivalent of a Windows service. 
The name ‚ÄúPrintDemon‚Äù seems to have given this bug a fearsomeness that it probably doesn‚Äôt deserve.
Both Windows and Unix still use the archaic computing word spooler to describe background software that handles printing jobs.
That word almost certainly derives from spools of magnetic or punched tape that were used for intermediate storage in the early days of computing.
Computers are fast but printers are slow and may go offline unpredictably, for example due to a paper jam or the toner running out.
So it makes sense to write printed output, or to spool it in the jargon, into some intermediate storage for later processing, where it won‚Äôt take up system resources such as RAM that would be better used for more pressing and complex tasks.
What the researchers discovered, very greatly simplified, is that with some simple PowerShell commands, any user (not just a system administrator) can setup a new printer device on Windows, provided that there‚Äôs already a low-level driver program installed to support the destination printer.
By combining the built-in printer driver called Generic / Text Only (which produces plain old text-only output, as its name suggests) with a local printer spoolfile for temporary output, anyone can set up a ‚Äúnew‚Äù printer with any name they like.
For example, a trio of PowerShell commmands of this sort‚Ä¶
‚Ä¶will set up a printer called MyPrinter, and pretty much whatever you print to it will end up sitting around, until you print something else, in the intermediate file called spoolfilename.
The problem, according to the Winsider researchers, is that you can specify a spoolfilename that you aren‚Äôt allowed to write to yourself at the time you do the Add-PrinterPort‚Ä¶
‚Ä¶but when you come to print to the MyPrinter device, then maybe, just maybe, you‚Äôll be able to trick the Windows Print Spooler into writing its temporary output into spoolfilename anyway.
As you can imagine, this means that commands such as the following could lead to the printer being a sneaky way to ‚Äúoutput‚Äù rogue software where it wouldn‚Äôt normally be allowed:
Apparently, if the Print Spooler is able to process the printing job immediately, then it will use your own account privileges to access the spoolfile, and so the print job will fail because you are blocked from changing or adding files in the system folders.
But if the print job can be deferred, for example until after a reboot, then the Print Spooler will try to catch up on unfinished print jobs later on, this time using its own account, which has SYSTEM privileges.
And thus an unprivileged user can get the Print Spooler to send untrusted data where it‚Äôs not supposed to go.
Ironically, it looks as though this bug has been around in Windows quite literally for decades.
According to the researchers, it was partially but not completely patched following its abuse by the infamous Stuxnet virus more than a decade ago, but it nevertheless remained potentially expolitable until yesterday‚Äôs patches came out.
The PrintDemon article authors finish up with the claim that:

So yes, walk to any unpatched system out there [‚Ä¶] and just write Add-PrinterPort -Name c:\windows\system32\[REDACTED] in a PowerShell window. Congratulations! You‚Äôve just given yourself a persistent backdoor on the system.

But we agree with the public assessment of Rapid-7 researcher Brendan Watters, who offered the opinion that the authors of the PrintDemon article have overstated the dangers somewhat.
As Watters points out, ‚Äúthis is not a single command to [a] root backdoor. It is more like several thousand lines of code and some well-timed execution gets you a rooted backdoor.‚Äù
In particular, we couldn‚Äôt figure out how to use just one line of PowerShell to control exactly what would get printed to the rogue spoolfile, so we couldn‚Äôt write any content that came out as a legal Windows executable. 
That‚Äôs because, by default, even the Generic / Text Only printer driver doesn‚Äôt blindly copy the characters that you print into the spoolfile ‚Äì it adds blank lines at the top of the output, and space characters after every line‚Äôs worth of output, to create page margins.
By default, nothing we printed out ever led to a spoolfile that actually started with the characters MZ, even if we put the literal characters MZ at the start of our output. 
But Windows programs will be ignored by the operating system unless they start with exactly those characters.
(Amusingly, the text MZ is a magic marker formed from the initials of Mark Zbikowski, the Microsoft programmer who invented the EXE file format many decades ago.)
It‚Äôs definitely a bug, and it‚Äôs a bad one, but:
You can guess what we are going to say.
Patch early, patch often!
Oh, and if you are a programmer, never ignore bug reports just because you think you fixed the hole more than a decade ago.
It‚Äôs tempting to assume that a known hole that was patched and then never re-exploited for more than ten years must surely have stood the test of time‚Ä¶
‚Ä¶but cybersecurity isn‚Äôt like that.
LISTEN NOW
Click-and-drag on the soundwaves below to skip to any point in the podcast. You can also listen directly on Soundcloud.
Follow @NakedSecurity on Twitter for the latest computer security news.
Follow @NakedSecurity on Instagram for exclusive pics, gifs, vids and LOLs!
Nice write up.  I have already patched most of my systems, and was concerned about the production servers I cannot reboot right now.  Thanks to this article, I think it is okay to wait until after hours vs interrupting production.  Lord knows we‚Äôve had enough of that lately.
You be careful what you call archaic (archaic computing word spooler)! I actually wrote a spooler system that spooled to magnetic tape, almost 50 years ago, for a Univac 9400 system (equiv IBM 360/30). It included space compression ‚Äì compressing out multiple spaces ‚Äì that was as much cpu as could be spared for anything special. The print out routine fitted into an 8k partition! I spent much of the development time reducing the code to fit this smallest partition size.
I did throw in ‚Äúpaper tape‚Äù to make the word archaic sound slightly fairer :-)
‚ÄúSpooler‚Äù actually comes from an acronym for Simultaneous Peripheral Operation On Line (some substituted ‚ÄúPrint‚Äù for ‚ÄúPerpheral‚Äù).  It refers to not having to wait for the operation to complete before being able to use your computer again.  Without a spooler, you‚Äôd start printing and wouldn‚Äôt be able to do anything else on your computer until the printer finished.
I have heard that acroynm before but I strongly suspect it was made up afterwards to fit the word (what‚Äôs known as a ‚Äúbackronym‚Äù), in the same way that the name of the programming language BASIC is sometimes expanded to ‚ÄúBeginners‚Äô All Purpose Symbolic Instruction Code‚Äù, even though it seems to have been known as just BASIC from the start, and even though BASIC is a fine name on its own. 
Anyway, even if it was an acronym to begin with, it was obviously and quite desperately forced to produce the word ‚Äúspool‚Äù, and so you still need a reason for that word, of hundreds of possible memorable alternatives, to have been chosen.
‚Äúbackronym‚Äù üôÇ
That‚Äôs like the backronym People Can‚Äôt Memorize Computer Industry Acronyms, which was *way* better than Personal Computer Memory Card International Association for the old PCMCIA slots üôÇ  My other favorite was TWAIN for Technology (or Thing) Without An Interesting Name.
Typo
How bad *it* it?
You may mean How bad *is* it?
Fixed, thanks.
Comment * 
Name 
Email 
Website 
 



Œî